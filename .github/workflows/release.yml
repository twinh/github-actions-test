name: Release

on:
  push:
    branches:
      - '**'
  workflow_dispatch:

env:
  extensions: mbstring, mysql
  key: cache-v1 # can be any string, change to clear the extension cache.

jobs:
  release:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.MY_GITHUB_TOKEN }}

      - uses: webfactory/ssh-agent@v0.4.1
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - uses: actions/setup-node@v1
        with:
          node-version: '12'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - run: cat $GITHUB_EVENT_PATH

      - run: yarn install

      - name: Release
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.MY_GITHUB_TOKEN }}
        run: yarn monorepo-semantic-release --debug

      - name: Get gitsync cache
        uses: actions/cache@v2
        with:
          path: .git/gitsync
          key: gitsync

      - run: |
          ./node_modules/.bin/gitsync exec --base-dir=.git/gitsync -- git reset --hard HEAD
          ./node_modules/.bin/gitsync exec --base-dir=.git/gitsync -- git pull --ff-only

      - run: yarn gitsync ci --base-dir=.git/gitsync --log-level=verbose